<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
        
    <!-- 
    	Spring AOP
		1. 주업무 객체 > 빈으로 등록
		2. 보조업무 객체 > 빈으로 등록
     -->
	
	
	<!-- 주업무 객체 -->
	<bean id="memo" class="com.test.begin.aop.MemoImpl"></bean>
	
	<!-- 보조업무 객체 -->
	<bean id="logger" class="com.test.begin.aop.Logger"></bean>
	
	<!-- 주압무 객체 + 보조업무 객체 -->
	<aop:config>
	
		<!-- 보조업무 객체를 지정한다. 역할 부여 -->
		<aop:aspect ref="logger" id="loggerAdvice">
		
			<!--
				1. 주 업무 객체를 지정
				2. 메서드를 지정
				
				1 + 2 = Pointcut > 보조 업무를 결합시킬 대상
				
				= 주업무 객체.특정 메서드()
				
				expression="AspectJ 표현식"
				- execution() 지시자
				- execution(특정 클래스 + 특정 메서드)
				- execution([접근지정자] 반환형 [패키지.클래스].메서드(인자))
					-> execution(public void com.test.begin.aop.MemoImpl.add(String))
				
				
			 -->
			 
			 <aop:pointcut expression="execution(public void com.test.begin.aop.MemoImpl.add(String))" id="p1"/>
			 
			 <aop:pointcut expression="execution(public String com.test.begin.aop.MemoImpl.read(int))" id="p2"/>
			 
			 <aop:pointcut expression="execution(public void com.test.begin.aop.MemoImpl.add(String)) || execution(public String com.test.begin.aop.MemoImpl.read(int))" id="p3"/>
			 
			 <!-- 
			 	보조업무 객체.메서드 + Pointcut > 위빙(Weaving) > Advice
			 	
			 	- 주업무 실행 > 보조업무 실행
			 	- 보조업무 실행 > 주업무 실행
			 	
			 	
			  -->
			<!-- <aop:after method="after" pointcut-ref="p1" /> after 결합(add 글쓰기) -->
			<aop:after method="after" pointcut-ref="p2" /> <!-- after 결합(read 읽기) -->
		
		
		</aop:aspect>
	
	</aop:config>
	
	
</beans>










